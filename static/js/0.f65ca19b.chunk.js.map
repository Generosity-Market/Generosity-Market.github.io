{"version":3,"sources":["../node_modules/react-in-viewport/dist/es/index.js","../node_modules/intersection-observer/intersection-observer.js","../node_modules/react-in-viewport/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","window","isStateless","Component","render","__webpack_exports__","options","config","undefined","disconnectOnLeave","InViewport","_PureComponent","props","instance","Constructor","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","observer","node","state","inViewport","enterCount","leaveCount","intersected","handleIntersection","bind","initIntersectionObserver","setRef","setInnerRef","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentDidMount","startObserver","componentDidUpdate","prevProps","prevState","unobserve","observe","IntersectionObserver","componentWillUnmount","stopObserver","disconnect","entries","_props","onEnterViewport","onLeaveViewport","entry","isIntersecting","intersectionRatio","setState","a","findDOMNode","_props2","others","obj","keys","indexOf","_objectWithoutProperties","refProps","innerRef","ref","createElement","document","IntersectionObserverEntry","defineProperty","get","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","filter","_unmonitorIntersections","_unregisterInstance","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","_callback","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","index","splice","targetArea","intersectionArea","callback","opt_options","fn","timeout","timer","setTimeout","throttle","rootMargin","join","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","err","child","parentNode","host","_ReactIs$ForwardRef","_defineProperty","ReactIs","REACT_STATICS","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","caller","callee","arity","TYPE_STATICS","ForwardRef","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","e","b","Symbol","for","c","d","f","g","h","k","l","m","q","p","$$typeof","typeOf","AsyncMode","ContextConsumer","ContextProvider","Element","Fragment","Profiler","Portal","StrictMode","isValidElementType","then","isAsyncMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isProfiler","isPortal","isStrictMode"],"mappings":"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","file":"static/js/0.f65ca19b.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (typeof window !== 'undefined') {\n  // Polyfills for intersection-observer\n  require('intersection-observer');\n}\n\nimport React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nvar isStateless = function isStateless(Component) {\n  return !Component.prototype.render;\n};\n\nfunction handleViewport(Component, options) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    disconnectOnLeave: false\n  };\n\n  var InViewport = function (_PureComponent) {\n    _inherits(InViewport, _PureComponent);\n\n    function InViewport(props) {\n      _classCallCheck(this, InViewport);\n\n      var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n      _this.observer = null;\n      _this.node = null;\n      _this.state = {\n        inViewport: false,\n        enterCount: 0,\n        leaveCount: 0\n      };\n      _this.intersected = false;\n      _this.handleIntersection = _this.handleIntersection.bind(_this);\n      _this.initIntersectionObserver = _this.initIntersectionObserver.bind(_this);\n      _this.setRef = _this.setRef.bind(_this);\n      _this.setInnerRef = _this.setInnerRef.bind(_this);\n      return _this;\n    }\n\n    InViewport.prototype.componentDidMount = function componentDidMount() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      this.initIntersectionObserver();\n      this.startObserver(this.node, this.observer);\n    };\n\n    InViewport.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      // reset observer on update, to fix race condition that when observer init,\n      // the element is not in viewport, such as in animation\n      if (!this.intersected && !prevState.inViewport) {\n        if (this.observer && this.node) {\n          this.observer.unobserve(this.node);\n          this.observer.observe(this.node);\n        }\n      }\n    };\n\n    InViewport.prototype.initIntersectionObserver = function initIntersectionObserver() {\n      if (!this.observer) {\n        this.observer = new IntersectionObserver(this.handleIntersection, options);\n      }\n    };\n\n    InViewport.prototype.componentWillUnmount = function componentWillUnmount() {\n      this.stopObserver(this.node, this.observer);\n    };\n\n    InViewport.prototype.startObserver = function startObserver(node, observer) {\n      if (node && observer) {\n        observer.observe(node);\n      }\n    };\n\n    InViewport.prototype.stopObserver = function stopObserver(node, observer) {\n      if (node && observer) {\n        observer.unobserve(node);\n        observer.disconnect();\n        this.observer = null;\n      }\n    };\n\n    InViewport.prototype.handleIntersection = function handleIntersection(entries) {\n      var _props = this.props,\n          onEnterViewport = _props.onEnterViewport,\n          onLeaveViewport = _props.onLeaveViewport;\n      var entry = entries[0] || {};\n      var isIntersecting = entry.isIntersecting,\n          intersectionRatio = entry.intersectionRatio;\n      var inViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n      if (!this.intersected && inViewport) {\n        this.intersected = true;\n        onEnterViewport && onEnterViewport();\n        this.setState({\n          inViewport: inViewport,\n          enterCount: this.state.enterCount + 1\n        });\n        return;\n      } // leave\n\n\n      if (this.intersected && !inViewport) {\n        this.intersected = false;\n        onLeaveViewport && onLeaveViewport();\n\n        if (config.disconnectOnLeave) {\n          // disconnect obsever on leave\n          this.observer && this.observer.disconnect();\n        }\n\n        this.setState({\n          inViewport: inViewport,\n          leaveCount: this.state.leaveCount + 1\n        });\n      }\n    };\n\n    InViewport.prototype.setRef = function setRef(node) {\n      this.node = ReactDOM.findDOMNode(node);\n    };\n\n    InViewport.prototype.setInnerRef = function setInnerRef(node) {\n      if (node && !this.node) {\n        // handle stateless\n        this.node = ReactDOM.findDOMNode(node);\n        this.initIntersectionObserver();\n        this.startObserver(this.node, this.observer);\n      }\n    };\n\n    InViewport.prototype.render = function render() {\n      var _props2 = this.props,\n          onEnterViewport = _props2.onEnterViewport,\n          onLeaveViewport = _props2.onLeaveViewport,\n          others = _objectWithoutProperties(_props2, ['onEnterViewport', 'onLeaveViewport']); // pass ref to class and innerRef for stateless component\n\n\n      var refProps = isStateless(Component) ? {\n        innerRef: this.setInnerRef\n      } : {\n        ref: this.setRef\n      };\n      return React.createElement(Component, _extends({}, others, {\n        inViewport: this.state.inViewport,\n        enterCount: this.state.enterCount,\n        leaveCount: this.state.leaveCount\n      }, refProps));\n    };\n\n    return InViewport;\n  }(PureComponent);\n\n  return hoistNonReactStatic(InViewport, Component);\n}\n\nexport default handleViewport;","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function (window, document) {\n  'use strict'; // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n\n  if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function get() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n\n    return;\n  }\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n\n\n  var registry = [];\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect; // Calculates the intersection ratio.\n\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height; // Sets intersection ratio.\n\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n\n\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    } // Binds and throttles `this._checkForIntersections`.\n\n\n    this._checkForIntersections = throttle(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT); // Private properties.\n\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin); // Public properties.\n\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues.map(function (margin) {\n      return margin.value + margin.unit;\n    }).join(' ');\n  }\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n  /**\n   * Use a mutation observer on the root element\n   * to detect intersection changes.\n   */\n\n  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n\n    this._observationTargets.push({\n      element: target,\n      entry: null\n    });\n\n    this._monitorIntersections();\n\n    this._checkForIntersections();\n  };\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n\n\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n\n      this._unregisterInstance();\n    }\n  };\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n\n    this._unmonitorIntersections();\n\n    this._unregisterInstance();\n  };\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n\n\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n\n    this._queuedEntries = [];\n    return records;\n  };\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n\n\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n\n      return t !== a[i - 1];\n    });\n  };\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n\n\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n\n      return {\n        value: parseFloat(parts[1]),\n        unit: parts[2]\n      };\n    }); // Handles shorthand.\n\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n    return margins;\n  };\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._monitorIntersections = function () {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true; // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorIntersections = function () {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n\n        this._domObserver = null;\n      }\n    }\n  };\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    var rootIsInDom = this._rootIsInDom();\n\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n\n      var rootContainsTarget = this._rootContainsTarget(target);\n\n      var oldEntry = item.entry;\n\n      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      });\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {}; // If the parent isn't displayed, an intersection can't happen.\n\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (parent != document.body && parent != document.documentElement && parentComputedStyle.overflow != 'visible') {\n          parentRect = getBoundingClientRect(parent);\n        }\n      } // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n\n\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n        if (!intersectionRect) break;\n      }\n\n      parent = getParentNode(parent);\n    }\n\n    return intersectionRect;\n  };\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n\n    return this._expandRectByRootMargin(rootRect);\n  };\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px' ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n    return newRect;\n  };\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1; // Ignore unchanged ratios\n\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i]; // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n\n      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {\n        return true;\n      }\n    }\n  };\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target);\n  };\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n\n\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n\n\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n\n\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n\n\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n\n\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n    return width >= 0 && height >= 0 && {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n\n\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {// Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect(); // Older IE\n\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n\n    return rect;\n  }\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n\n\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n\n\n  function containsDeep(parent, child) {\n    var node = child;\n\n    while (node) {\n      if (node == parent) return true;\n      node = getParentNode(node);\n    }\n\n    return false;\n  }\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n\n\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n\n    return parent;\n  } // Exposes the constructors globally.\n\n\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})(window, document);","'use strict';\n\nvar _ReactIs$ForwardRef;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\n\nvar ReactIs = require('react-is');\n\nvar React = require('react');\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\n\nvar TYPE_STATICS = _defineProperty({}, ReactIs.ForwardRef, (_ReactIs$ForwardRef = {}, _defineProperty(_ReactIs$ForwardRef, '$$typeof', true), _defineProperty(_ReactIs$ForwardRef, 'render', true), _ReactIs$ForwardRef));\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = TYPE_STATICS[targetComponent['$$typeof']] || REACT_STATICS;\n    var sourceStatics = TYPE_STATICS[sourceComponent['$$typeof']] || REACT_STATICS;\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","/** @license React v16.5.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    n = b ? Symbol.for(\"react.placeholder\") : 60113;\n\nfunction q(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var p = a.$$typeof;\n\n    switch (p) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case e:\n          case g:\n          case f:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case m:\n              case h:\n                return a;\n\n              default:\n                return p;\n            }\n\n        }\n\n      case d:\n        return p;\n    }\n  }\n}\n\nexports.typeOf = q;\nexports.AsyncMode = l;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = m;\nexports.Fragment = e;\nexports.Profiler = g;\nexports.Portal = d;\nexports.StrictMode = f;\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === l || a === g || a === f || a === n || \"object\" === typeof a && null !== a && (\"function\" === typeof a.then || a.$$typeof === h || a.$$typeof === k || a.$$typeof === m);\n};\n\nexports.isAsyncMode = function (a) {\n  return q(a) === l;\n};\n\nexports.isContextConsumer = function (a) {\n  return q(a) === k;\n};\n\nexports.isContextProvider = function (a) {\n  return q(a) === h;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nexports.isForwardRef = function (a) {\n  return q(a) === m;\n};\n\nexports.isFragment = function (a) {\n  return q(a) === e;\n};\n\nexports.isProfiler = function (a) {\n  return q(a) === g;\n};\n\nexports.isPortal = function (a) {\n  return q(a) === d;\n};\n\nexports.isStrictMode = function (a) {\n  return q(a) === f;\n};"],"sourceRoot":""}