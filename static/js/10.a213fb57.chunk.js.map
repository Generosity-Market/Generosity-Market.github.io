{"version":3,"sources":["components/Heading/Heading.js","components/ActionButton/index.js","components/InputGroup/InputGroup.js","components/MiniButton/MiniButton.js","components/ImageUploader/inputInfo.js","components/ImageUploader/ImageUploader.js","screens/CauseForm/inputOptions.js","screens/CauseForm/components/IconSelector/IconSelector.js","screens/CauseForm/CauseForm.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Styles","borderBottom","color","margin","paddingBottom","width","Heading","props","a","createElement","className","style","text","_components_FontAwesome_FontAwesome__WEBPACK_IMPORTED_MODULE_1__","ActionButton","_ref","action","classname","icon","actionText","buttonWrap","onClick","buttonStyles","cursor","fontSize","textTransform","textDecoration","textAlign","defaultProps","InputGroup","getSelectOptions","options","index","react__WEBPACK_IMPORTED_MODULE_5___default","key","name","size","onChange","_this","handleUpdateState","value","state","type","map","option","getTextArea","input","placeholder","getInput","_this2","this","inputs","inputOptions","selectOptions","Component","MiniButton","react_default","concat","e","children","coverInput","labelClass","inputClass","image_type","argument","profileInput","ImageUpload","createFileInput","URL","iconClass","FontAwesome","handleImageChange","event","target","checkURL","faClass","roundImage","backgroundImage","_this$props","profileURL","coverURL","$profilePreview","$coverPreview","components_MiniButton_MiniButton","IconSelector","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selected","renderIconTiles","bind","assertThisInitialized","icons","decreaseViewIndex","gridTemplateColumns","length","increaseViewIndex","i","match","selectIcon","src","returnIconUrl","alt","require","setState","handleSelect","CauseForm","handleButtonText","status","handleSelectIcon","field","defineProperty","url","preventDefault","files","reader","FileReader","file","onloadend","data","_this$setState3","result","readAsDataURL","_this$setState4","handlePublish","formData","FormData","append","profile_image","cover_image","JSON","stringify","Services","submitCauseForm","headers","Content-Type","then","res","console","log","errors","addCause","Cause","setTimeout","history","push","id","catch","err","organization_name","tax_id","goal","description","purpose","whiteText","ImageUploader","components_IconSelector_IconSelector","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/10.a213fb57.chunk.js","sourcesContent":["import React from 'react';\n\nconst Styles = {\n  borderBottom: 'var(--border)',\n  color: 'var(--bright-green)',\n  margin: '1rem auto',\n  paddingBottom: '0.5rem',\n  width: '92%'\n}\n\nconst Heading = props =>\n<h3 className=\"Heading\" style={Styles}>{props.text}</h3>\n\nexport default Heading;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FontAwesome from '../../components/FontAwesome/FontAwesome'\nimport './ActionButton.css'\n\nconst ActionButton = ({action, classname, icon, actionText}) => {\n\n    return(\n\t\t<div className=\"ActionButton\" style={buttonWrap}>\n\t\t\t<div onClick={action} className={classname} style={buttonStyles}>\n\t\t\t\t{ icon &&\n        \t\t<FontAwesome classname={icon}/> }\n\n\t\t\t\t{actionText}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst buttonStyles = {\n\twidth:          '100%',\n\t// padding:        '0.25rem 0rem',\n\tcursor:         'pointer',\n\tmargin:         '0 auto',\n\tfontSize:       '18px',\n\ttextTransform:  'uppercase',\n\ttextDecoration: 'none',\n\ttextAlign:      'center'\n}\n\nconst buttonWrap = {\n\t// padding:          '0.5rem',\n\t// border:           '1px solid var(--light-gray)',\n\t// borderRadius:     '5px',\n\t// width:            '85%',\n\t// margin:           '0 auto 3rem'\n}\n\nActionButton.propTypes = {\n\t/**\n    * The classname to apply to the root node\n    */\n\tclassname: PropTypes.string.isRequired,\n\t/**\n    * The text to render at the root nodes\n    */\n\tactionText: PropTypes.string.isRequired,\n\t/**\n    * The Handler for action button click\n    */\n\taction: PropTypes.func.isRequired,\n\t/**\n    * The name of the Font Awesome icon to pass to the FontAwesome component\n    */\n\ticon: PropTypes.string,\n}\n\nActionButton.defaultProps = {\n\taction: () => {},\n\tactionText: '',\n\tclassname: '',\n\ticon: null,\n}\n\nexport default ActionButton;\n","import React, { Component } from 'react';\nimport './InputGroup.css';\n\nclass InputGroup extends Component {\n\n    getSelectOptions = (options, index) => {\n        return (\n            <select key={index} name='type' size={1}\n                onChange={this.props.handleUpdateState('type')}\n                value={this.props.state.type}>\n                <option value=\"\">- Type of Cause -</option>\n                {options.map((option, index) => {\n                    return (\n                        <option key={index} value={option}>{option}</option>\n                    );\n                })}\n            </select>\n        );\n    }\n\n    getTextArea = (input, index) => {\n        return (\n            <textarea key={index} name={input.name}\n                placeholder={input.placeholder}\n                onChange={this.props.handleUpdateState(input.name)}\n                value={this.props.state[input.name]}>\n            </textarea>\n        );\n    };\n\n    getInput = (input, index) => {\n        return (\n            <input\n                key={index}\n                type={input.type}\n                name={input.name}\n                placeholder={input.placeholder}\n                onChange={this.props.handleUpdateState(input.name)}\n                value={this.props.state[input.name]}\n            />\n        )\n    }\n\n    render() {\n        let inputs = this.props.inputOptions.map((input, index) => {\n            if (input.type === 'select') {\n                return this.getSelectOptions(this.props.selectOptions, index);\n            } else if (input.type === 'textarea') {\n                return this.getTextArea(input, index);\n            } else {\n                return this.getInput(input, index);\n            }\n        });\n\n        return (\n            <div className=\"InputGroup\">\n                {inputs}\n            </div>\n        );\n    }\n}\n\nexport default InputGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MiniButton = (props) =>\n  <div className={`${props.classname} btns`} onClick={(e) => props.onClick(e)}>\n    {props.children}\n  </div>;\n\nMiniButton.propTypes = {\n  classname: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default MiniButton;\n","const coverInput = {\n  labelClass: 'coverLabel btns',\n  inputClass: 'coverInput',\n  image_type: 'cover_image',\n  argument: 'coverURL',\n  text: 'Add Cover',\n}\n\nconst profileInput = {\n  labelClass: 'profileLabel btns',\n  inputClass: 'profileInput',\n  image_type: 'profile_image',\n  argument: 'profileURL',\n  text: 'Add Profile'\n};\n\nexport { coverInput, profileInput };\n","import React, { Component } from 'react';\nimport FontAwesome from '../FontAwesome/FontAwesome';\nimport MiniButton from '../MiniButton/MiniButton';\nimport { coverInput, profileInput } from './inputInfo.js';\nimport './ImageUploader.css';\n\nexport default class ImageUpload extends Component {\n  \n  createFileInput = (input, URL) => {\n    let iconClass = URL ? 'fas fa-pencil-alt btns' : 'fas fa-plus btns';\n    return (\n      <label className={URL ? `${input.labelClass} active` : input.labelClass}>\n        <FontAwesome classname={iconClass} />\n        <input className={input.inputClass}\n          type=\"file\"\n          onChange={(e) => this.props.handleImageChange(e, input.image_type, input.argument)}\n          onClick={(event) => { event.target.value = null }} />\n      </label>\n    );\n  }\n\n  checkURL = (URL, faClass, roundImage) => {\n    if (URL) {\n      return <div className={roundImage ? 'circle' : ''} style={{ backgroundImage: `url(${URL})` }}></div>;\n    } else {\n      return <FontAwesome classname={`${faClass} ${roundImage ? 'circle' : ''}`} />;\n    }\n  }\n\n  render() {\n    const { profileURL, coverURL, name, roundImage, handleImageChange, handleUpdateState } = this.props;\n    let $profilePreview = this.checkURL(profileURL, 'fas fa-camera', roundImage);\n    let $coverPreview = this.checkURL(coverURL, 'fas fa-image');\n\n    return (\n      <div className=\"ImageUploader previewComponent\">\n        <div className=\"Banner\">\n\n          <div className=\"coverPreview\">\n            <h2 className=\"banner-heading\">{name}</h2>\n            {this.createFileInput(coverInput, coverURL)}\n            {!coverURL && <p>Add Cover Photo</p>}\n            {$coverPreview}\n            {coverURL &&\n              <MiniButton classname=\"delete_cover\"  onClick={(e) => handleImageChange(e, 'cover_image', 'coverURL')}>\n                <FontAwesome classname={'fas fa-times'} />\n              </MiniButton>}\n          </div>\n\n          <div className=\"profilePreview\">\n            {this.createFileInput(profileInput, profileURL)}\n            {$profilePreview}\n\n            <MiniButton classname={profileURL ? \"change_profile_shape active\" : \"change_profile_shape\"}\n              onClick={handleUpdateState('roundImage')}>\n              <FontAwesome classname={roundImage ? 'fas fa-square' : 'fas fa-circle'} />\n            </MiniButton>\n\n            <MiniButton classname={profileURL ? \"delete_profile active\" : \"delete_profile\"}\n              onClick={(e) => handleImageChange(e, 'profile_image', 'profileURL')}>\n              <FontAwesome classname={'fas fa-times'}/>\n            </MiniButton>\n\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n  \n};\n","const inputOptions = [\n  {\n    type: 'text',\n    name: 'name',\n    placeholder: 'Cause Name',\n  }, {\n    type: 'select',\n    name: 'type',\n  }, {\n    type: 'text',\n    name: 'organization_name',\n    placeholder: \"Non Profit / Organization's Name  (If applicable)\",\n  }, {\n    type: 'text',\n    name: 'tax_id',\n    placeholder: 'Tax ID  (If Non Profit / Organization)',\n  }, {\n    type: 'number',\n    name: 'goal',\n    placeholder: 'Fundraising Goal',\n  }, {\n    type: 'textarea',\n    name: 'description',\n    placeholder: 'About the cause',\n  }, {\n    type: 'textarea',\n    name: 'purpose',\n    placeholder: 'How the funds will be used',\n  }\n]\n\nexport default inputOptions;\n","import React, { Component } from 'react';\nimport FontAwesome from '../../../../components/FontAwesome/FontAwesome';\nimport './IconSelector.css';\n\n\nclass IconSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null\n    };\n\n    this.renderIconTiles = this.renderIconTiles.bind(this);\n\n    this.icons = ['Africa', 'Airplane', 'Apple', 'Diaper', 'Envelope', 'Globe', 'Ornament'];\n  }\n  render() {\n    return (\n      <div className=\"IconSelector\">\n        <div className=\"selector\">\n          <div className=\"button left\" onClick={this.decreaseViewIndex}>\n            <FontAwesome classname={\"fas fa-2x fa-chevron-left\"} />\n          </div>\n          <div className=\"slider\">\n            <div\n              className=\"window\"\n              style={{ gridTemplateColumns: `repeat(${this.icons.length}, 1fr`}}\n            >\n              {this.renderIconTiles()}\n            </div>\n          </div>\n          <div className=\"button right\" onClick={this.increaseViewIndex}>\n            <FontAwesome classname={\"fas fa-2x fa-chevron-right\"} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderIconTiles() {\n    return this.icons.map((icon, i) => {\n      const match = icon === this.state.selected;\n      return (\n        <div className={\"icon-tile\" + (match ? \" selected\" : \"\")} key={i} onClick={this.selectIcon.bind(this, icon)}>\n          {match ? (\n            <div className=\"overlay\">\n              <FontAwesome classname={\"far fa-lg fa-check-circle\"} />\n            </div>\n          ) : null}\n          <img src={this.returnIconUrl(icon)} alt={icon}/>\n        </div>\n      );\n    });\n  }\n\n  returnIconUrl(name) {\n    const url = require(`../../../../Assets/icons/PNG/${name}.png`);\n    return url;\n  }\n\n  selectIcon(name) {\n    this.setState({ selected: name });\n    this.props.handleSelect(name);\n  }\n}\n\nexport default IconSelector;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addCause } from '../../actions/actions';\nimport Services from '../../services/services';\nimport './causeForm.css';\nimport inputOptions from './inputOptions';\n\n// Component imports\nimport InputGroup from '../../components/InputGroup/InputGroup';\nimport IconSelector from './components/IconSelector/IconSelector';\nimport ImageUploader from '../../components/ImageUploader/ImageUploader';\nimport ActionButton from '../../components/ActionButton';\nimport Heading from '../../components/Heading/Heading';\n\nclass CauseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      icon: null,\n      name: '',\n      type: '',\n      organization_name: '',\n      tax_id: '',\n      goal: '',\n      description: '',\n      purpose: '',\n      profile_image: '',\n      profileURL: '',\n      cover_image: '',\n      coverURL: '',\n      roundImage: true,\n      whiteText: true,\n\n      status: '',\n    };\n  }\n\n  handleButtonText = () => {\n    switch (this.state.status) {\n      case 'loading':\n        return 'Sending...';\n      case 'success':\n        return '√ Published';\n      case 'failed':\n        return 'Failed - Retry';\n      default:\n        return 'Publish your cause'\n    }\n  }\n\n  render() {\n    const selectOptions = ['Trip', 'Mission', 'Adoption', 'Camp', 'Community Project'];\n    return(\n      <div className=\"CauseForm\">\n\n        <ImageUploader\n          handleImageChange={this.handleImageChange}\n          handleUpdateState={this.handleUpdateState}\n          name={this.state.name}\n          profileURL={this.state.profileURL}\n          coverURL={this.state.coverURL}\n          roundImage={this.state.roundImage}\n          whiteText={this.state.whiteText}\n        />\n        <Heading text={'Select Your Cause Profile & Cover Images'} />\n\n        <InputGroup\n          state={this.state}\n          handleUpdateState={this.handleUpdateState}\n          inputOptions={inputOptions}\n          selectOptions={selectOptions}\n        />\n\n        <Heading text={'Select Your Fundraising Icon'} />\n        <IconSelector handleSelect={this.handleSelectIcon} />\n\n        <ActionButton\n          actionText={this.handleButtonText()}\n          classname={'publish-cause'}\n          action={this.handlePublish}\n        />\n\n      </div>\n    );\n  }\n\n  handleSelectIcon = (name) => {\n    this.setState({ icon: name });\n  }\n\n  handleUpdateState = (field) => {\n    return (event) => {\n      if ((field === 'roundImage') || (field === 'whiteText')) {\n        this.setState({ [field]: !this.state[field] })\n      } else {\n        this.setState({[field]: event.target.value})\n      }\n    };\n  };\n\n  handleImageChange = (event, field, url) => {\n    event.preventDefault();\n    if (event.target.files) {\n      let reader = new FileReader();\n      let file = event.target.files[0];\n      reader.onloadend = (data) => {\n        this.setState({\n          [field]: file,\n          [url]: reader.result\n        });\n      }\n      reader.readAsDataURL(file);\n    } else {\n      this.setState({\n        [field]: '',\n        [url]: ''\n      });\n    }\n  };\n\n  handlePublish = () => {\n    // console.log('handle uploading-', this.state);\n    this.setState({ status: 'loading' });\n    delete this.state.profileURL;\n    delete this.state.coverURL;\n\n    const formData = new FormData();\n    formData.append('profileImage', this.state.profile_image);\n    formData.append('coverImage', this.state.cover_image);\n    formData.append('bucket', 'cause');\n    formData.append('state', JSON.stringify(this.state));\n\n    Services.submitCauseForm(formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(res => {\n      // TODO look for the response to see if errors come here....\n      console.log(\"Response: \", res);\n      if (res.errors) {\n        // return // handle error...\n      }\n      \n      this.setState({ status: 'success' });\n      this.props.addCause(res.Cause);\n      // BUG FIX -> Navigating to previously created page instead of the newly created one...\n      setTimeout(() => this.props.history.push(`/cause/${res.Cause.id}`), 1000);\n    }).catch(err => {\n      // handle your error\n      console.log(\"Error: \", err);\n    });\n  };\n\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = { addCause };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CauseForm);\n"],"sourceRoot":""}